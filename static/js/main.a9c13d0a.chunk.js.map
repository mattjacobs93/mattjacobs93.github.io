{"version":3,"sources":["content/pages/Home.js","content/pages/Contact.js","content/pages/Projects.js","content/Content.js","nav/Footer.js","nav/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","className","alt","src","style","borderRadius","class","Contact","href","target","icon","faLinkedin","size","faGithub","faEnvelope","faFile","Projects","Row","Col","sm","Card","body","CardTitle","CardImg","width","height","CardText","Button","a","Content","exact","path","component","Footer","Styles","styled","div","NavigationBar","Navbar","expand","Toggle","aria-controls","Collapse","id","Nav","Item","Link","App","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9c13d0a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = props => {\n    return (\n        // Home page\n        <div className='about'>\n            <h1>Matt Jacobs</h1>\n            <h3>Full Stack Software Engineer</h3>\n            <div className=\"bio\">\n                <img alt=\"me\" src=\"https://i.imgur.com/i8RMOwB.jpg\" style={{ borderRadius: \"40%\" }} class=\"img-thumbnail\"></img>\n                <p>Iâ€™m a full-stack software engineer who has skills building user-friendly front-ends and efficient and secure back-ends. In a previous life, I was a teacher of English as a second language where I had the opportunity to greatly improve my skills as both a communicator and a collaborative team member. As a software engineer, I am passionate about writing code that is efficient, scalable, and secure.</p>\n            </div>\n            <hr />\n            <div className='skills-container'>\n                <div className=\"skill\"><i className=\"devicon-html5-plain-wordmark colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-css3-plain-wordmark colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-javascript-plain colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-nodejs-plain colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-react-original-wordmark colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-python-plain-wordmark colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-postgresql-plain-wordmark colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-mongodb-plain-wordmark colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-express-original colored\"></i></div>\n                <div className=\"skill\"><i className=\"devicon-bootstrap-plain-wordmark colored\"></i></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedin, faGithub } from '@fortawesome/fontawesome-free-brands'\nimport { faEnvelope, faFile } from '@fortawesome/free-solid-svg-icons'\n\nconst Contact = props => {\n    return (\n        // Contact page\n        <div className=\"contact\">\n            <h1>Feel free to contact me!</h1>\n            <div className=\"icons\">\n                <a href=\"https://www.linkedin.com/in/matthewjacobs93/\" target=\"_blank\">\n                    <FontAwesomeIcon className='font-awesome' icon={faLinkedin} size='3x' />\n                    <p className=\"icon\"><strong>LinkedIn</strong></p>\n                </a>\n            </div>\n            <div className=\"icons\">\n                <a href=\"https://github.com/mattjacobs93\" target=\"_blank\">\n                    <FontAwesomeIcon className='font-awesome' icon={faGithub} size='3x' />\n                    <p className=\"icon\"><strong>GitHub</strong></p>\n                </a>\n            </div>\n            <div className=\"icons\">\n                <a href=\"mailto:matthewjacobs73@yahoo.com\" target=\"_blank\" >\n                    <FontAwesomeIcon className='font-awesome' icon={faEnvelope} size='3x' />\n                    <p className=\"icon\"><strong>Email</strong></p>\n                </a>\n            </div>\n            <div className=\"icons\">\n                <a href=\"/Resume.2022.pdf\" target=\"_blank\">\n                    <FontAwesomeIcon className='font-awesome' icon={faFile} size='3x' />\n                    <p className=\"icon\"><strong>Resume</strong></p>\n                </a>\n            </div>\n        </div>\n    )\n}\n\nexport default Contact","import React from 'react'\nimport { Card, Button, CardTitle, CardText, CardImg, Row, Col } from 'reactstrap';\n\n\nconst Projects = (props) => {\n    return (\n        // Projects page\n        <div className='projects'>\n            <h1>Projects</h1>\n            <Row>\n                <Col sm=\"6\">\n                    <Card body>\n                        <CardTitle><h2><strong>AI Art Generator</strong></h2></CardTitle>\n                        <CardImg className=\"card-image\" width=\"30%\" height=\"30%\" src=\"https://i.imgur.com/7e1CWgY.png\" alt=\"Example Art by AI Art Generator\" />\n                        <CardText className=\"card-text\">I worked on a fully-remote, three person team to build an app for the creation of AI generated Art.  The artworks are generated using the technique of neural style transfer to generate a new image with the content of the content image, but in the style of the style image.</CardText>\n                        <Button a href=\"https://github.com/mattjacobs93/ai-art-generator-front-end\" target=\"_blank\">GitHub Link For AI Art Generator</Button>\n                        <br />\n                        <Button a href=\"https://aiartgenerator.herokuapp.com/login\" className=\"live-link\" target=\"_blank\">Live Link</Button>\n                    </Card>\n                </Col>\n                <br />\n                <Col sm=\"6\">\n                    <Card body>\n                        <CardTitle><h2><strong>Social NFT</strong></h2></CardTitle>\n                        <CardImg className=\"card-image\" width=\"30%\" height=\"30%\" src=\"https://i.imgur.com/nZFokJM.png\" alt=\"Social NFT\" />\n                        <CardText className=\"card-text\">I worked on a fully-remote, three person team to build a MERN-stack Instagram clone centered around the posting, sharing, and minting of NFT artwork.  Users are able to create posts, like posts, comment on posts, and follow other users.  Additionally, users are able to mint their artwork with the click of a button as an NFT, with metadata stored using IPFS, and the IPFS URL stored on an Ethereum testnet via a deployed ERC-721 contract. </CardText>\n                            <Button a href=\"https://github.com/mattjacobs93/social-nft-front-end\" target=\"_blank\">GitHub Link For Social NFT</Button>\n                            <br />\n                            <Button a href=\"https://social-nft.netlify.app/\" className=\"live-link\" target=\"_blank\">Live Link</Button>\n                        </Card>\n                    </Col>\n                <Row />\n                <br />\n                <Row>\n                    <Col sm=\"6\">\n                        <Card body>\n                            <CardTitle><h2><strong>Checkers</strong></h2></CardTitle>\n                            <CardImg className=\"card-image\" width=\"30%\" height=\"30%\" src=\"https://i.imgur.com/8CSLOFV.png\" alt=\"Checkers\" />\n                            <CardText className=\"card-text\">I programmed a browser-based game of checkers with AI.  The AI was developed using the minmax algorithm, and the implementation consists of three levels of difficulty that the user can play against.  Supported game play is user vs user, user vs AI, and AI vs AI</CardText>\n                            <Button a href=\"https://github.com/mattjacobs93/checkers\" target=\"_blank\">GitHub Link For Checkers</Button>\n                            <br />\n                            <Button a href=\"http://www.checkersbymattjacobs.surge.sh/\" className=\"live-link\" target=\"_blank\">Live Link</Button>\n                        </Card>\n                    </Col>\n                    <br />\n                </Row>\n                <br />\n            </Row>\n        </div>\n    )\n}\n\nexport default Projects","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\n// Custom components\nimport Home from './pages/Home'\nimport Contact from './pages/Contact'\nimport Projects from './pages/Projects'\n\n\nconst Content = props => {\n    return (\n        <div className=\"container\">\n            <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/contact\" component={Contact}/>\n            <Route path=\"/projects\" component={Projects} />\n            </Switch>\n        </div>\n    )\n}\n\nexport default Content\n","import React from 'react'\n\nconst Footer = props => {\n    return (\n        <footer>\n            <img alt=\"logo\" src=\"https://i.imgur.com/PVWYGD4.png?4\"></img>    \n        </footer>\n    )\n}\n\nexport default Footer","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n.navbar { background-color: #41545E; }\na, .navbar-nav, .navbar-light .nav-link {\ncolor: #99CAC9;\nfont-weight: 800;\n&:hover { color: orange; }\n}\n`;\n\nconst NavigationBar = props => {\n\n    return (\n    <Styles>\n    <Navbar expand=\"lg\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"nav\">\n            <Nav.Item><Nav.Link href=\"/\">Home</Nav.Link></Nav.Item>\n            <Nav.Item><Nav.Link href=\"/projects\">Projects</Nav.Link></Nav.Item>\n            <Nav.Item><Nav.Link href=\"/contact\">Contact Me</Nav.Link></Nav.Item>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>\n    </Styles>\n    )\n}\n\nexport default NavigationBar","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Content from './content/Content'\nimport Footer from './nav/Footer'\nimport NavigationBar from './nav/NavigationBar'\nimport './App.css';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div className = 'app'>\n          <NavigationBar />\n          <main>\n            <Content />\n          </main>\n        </div>\n        <Footer />\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}